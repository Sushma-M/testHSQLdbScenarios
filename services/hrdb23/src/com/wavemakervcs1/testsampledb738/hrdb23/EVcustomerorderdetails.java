/*Copyright (c) 2015-2016 wavemakervcs1.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemakervcs1.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemakervcs1.com*/

package com.wavemakervcs1.testsampledb738.hrdb23;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/


import javax.persistence.PrimaryKeyJoinColumn;
import javax.persistence.AttributeOverride;
import javax.persistence.AttributeOverrides;
import javax.persistence.Column;
import javax.persistence.EmbeddedId;
import javax.persistence.Entity;
import javax.persistence.Table;


import java.util.Arrays;

import javax.persistence.Transient;
import javax.persistence.CascadeType;
import javax.persistence.UniqueConstraint;




/**
 * EVcustomerorderdetails generated by hbm2java
 */
@Entity
@Table(name="E_VCUSTOMERORDERDETAILS"
    ,schema="PUBLIC"
)
public class EVcustomerorderdetails  implements java.io.Serializable
 {


private EVcustomerorderdetailsId id;

    public EVcustomerorderdetails() {
    }



     @EmbeddedId

    

    @AttributeOverrides( {
        @AttributeOverride(name="orderId", column=@Column(name="ORDER_ID") ), 
        @AttributeOverride(name="custName", column=@Column(name="CUST_NAME", length=30) ), 
        @AttributeOverride(name="amount", column=@Column(name="AMOUNT") ), 
        @AttributeOverride(name="date", column=@Column(name="DATE", length=10) ) } )
    public EVcustomerorderdetailsId getId() {
        return this.id;
    }
    
    public void setId(EVcustomerorderdetailsId id) {
        this.id = id;
    }



public boolean equals(Object o) {
         if (this == o)
         return true;
		 if ( (o == null ) )
		 return false;
		 if ( !(o instanceof EVcustomerorderdetails) )
		 return false;

		 EVcustomerorderdetails that = ( EVcustomerorderdetails ) o;

		 return ( (this.getId()==that.getId()) || ( this.getId()!=null && that.getId()!=null && this.getId().equals(that.getId()) ) );

   }

   public int hashCode() {
         int result = 17;

         result = 37 * result + ( getId() == null ? 0 : this.getId().hashCode() );

         return result;
     }


}

