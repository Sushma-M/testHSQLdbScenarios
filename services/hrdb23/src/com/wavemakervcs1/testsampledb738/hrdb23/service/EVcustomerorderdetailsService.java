/*Copyright (c) 2015-2016 wavemakervcs1.com All Rights Reserved.
 This software is the confidential and proprietary information of wavemakervcs1.com You shall not disclose such Confidential Information and shall use it only in accordance
 with the terms of the source code license agreement you entered into with wavemakervcs1.com*/

package com.wavemakervcs1.testsampledb738.hrdb23.service;

/*This is a Studio Managed File. DO NOT EDIT THIS FILE. Your changes may be reverted by Studio.*/




import org.springframework.data.domain.Page;
import org.springframework.data.domain.Pageable;

import com.wavemaker.runtime.data.expression.QueryFilter;
import com.wavemaker.runtime.data.exception.EntityNotFoundException;

import com.wavemakervcs1.testsampledb738.hrdb23.*;

/**
 * Service object for domain model class EVcustomerorderdetails.
 * @see com.wavemakervcs1.testsampledb738.hrdb23.EVcustomerorderdetails
 */

public interface EVcustomerorderdetailsService {
   /**
	 * Creates a new evcustomerorderdetails.
	 * 
	 * @param created
	 *            The information of the created evcustomerorderdetails.
	 * @return The created evcustomerorderdetails.
	 */
	public EVcustomerorderdetails create(EVcustomerorderdetails created);

	/**
	 * Deletes a evcustomerorderdetails.
	 * 
	 * @param evcustomerorderdetailsId
	 *            The id of the deleted evcustomerorderdetails.
	 * @return The deleted evcustomerorderdetails.
	 * @throws EntityNotFoundException
	 *             if no evcustomerorderdetails is found with the given id.
	 */
	public EVcustomerorderdetails delete(EVcustomerorderdetailsId evcustomerorderdetailsId) throws EntityNotFoundException;

	/**
	 * Finds all evcustomerorderdetailss.
	 * 
	 * @return A list of evcustomerorderdetailss.
	 */
	public Page<EVcustomerorderdetails> findAll(QueryFilter[] queryFilters, Pageable pageable);
	
	public Page<EVcustomerorderdetails> findAll(Pageable pageable);
	
	/**
	 * Finds evcustomerorderdetails by id.
	 * 
	 * @param id
	 *            The id of the wanted evcustomerorderdetails.
	 * @return The found evcustomerorderdetails. If no evcustomerorderdetails is found, this method returns
	 *         null.
	 */
	public EVcustomerorderdetails findById(EVcustomerorderdetailsId id) throws EntityNotFoundException;
	/**
	 * Updates the information of a evcustomerorderdetails.
	 * 
	 * @param updated
	 *            The information of the updated evcustomerorderdetails.
	 * @return The updated evcustomerorderdetails.
	 * @throws EntityNotFoundException
	 *             if no evcustomerorderdetails is found with given id.
	 */
	public EVcustomerorderdetails update(EVcustomerorderdetails updated) throws EntityNotFoundException;

	/**
	 * Retrieve the total count of the evcustomerorderdetailss in the repository.
	 * 
	 * @param None
	 *            .
	 * @return The count of the evcustomerorderdetails.
	 */

	public long countAll();


    public Page<EVcustomerorderdetails> findAssociatedValues(Object value, String entityName, String key,  Pageable pageable);


}

